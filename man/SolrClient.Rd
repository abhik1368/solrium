% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SolrClient.R
\docType{data}
\name{SolrClient}
\alias{SolrClient}
\title{Solr connection client}
\arguments{
\item{host}{(character) Host url. Deafault: 127.0.0.1}

\item{path}{(character) url path.}

\item{port}{(character/numeric) Port. Default: 8389}

\item{scheme}{(character) http scheme, one of http or https. Default: http}

\item{proxy}{List of arguments for a proxy connection, including one or
more of: url, port, username, password, and auth. See
\link[crul:proxy]{crul::proxy} for  help, which is used to construct the
proxy connection.}

\item{errors}{(character) One of simple or complete. Simple gives http code
and  error message on an error, while complete gives both http code and
error message, and stack trace, if available.}
}
\value{
Various output, see help files for each grouping of methods.
}
\description{
Solr connection client
}
\details{
\code{SolrClient} creates a R6 class object. The object is
not cloneable and is portable, so it can be inherited across packages
without complication.

\code{SolrClient} is used to initialize a client that knows about your
Solr instance, with options for setting host, port, http scheme,
and simple vs. complete error reporting
}
\section{SolrClient methods}{

\strong{Methods}
\describe{
\item{\code{ping()}}{
ping the Solr server
}
\item{\code{schema()}}{
get the schema info
}
\item{\code{search()}}{
search
}
}
}

\examples{
\dontrun{
# make a client
(cli <- SolrClient$new())

# variables
cli$host
cli$port
cli$path
cli$scheme

# ping
## ping to make sure it's up
cli$ping("gettingstarted")

# version
## get Solr version information
cli$schema("gettingstarted")
cli$schema("gettingstarted", "fields")
cli$schema("gettingstarted", "name")
cli$schema("gettingstarted", "version")$version

# Search
cli$search("gettingstarted")
cli$search("gettingstarted", params = list(q = "features:notes"))
cli$search("gettingstarted", body = list(q = "features:notes"))

# set a different host
SolrClient$new(host = 'stuff.com')

# set a different port
SolrClient$new(host = 3456)

# set a different http scheme
SolrClient$new(scheme = 'https')

# set a proxy
SolrClient$new(proxy = list(url = "187.62.207.130:3128"))

prox <- list(url = "187.62.207.130:3128", user = "foo", pwd = "bar")
cli <- SolrClient$new(proxy = prox)
cli$proxy

# A remote Solr instance to which you don't have admin access
(cli <- SolrClient$new(host = "api.plos.org", path = "search", port = NULL))
cli$search()
cli$search(params = list(q = "memory"))

}
}
\keyword{datasets}
